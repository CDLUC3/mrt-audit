    <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
        <modelVersion>4.0.0</modelVersion>
        <groupId>org.cdlib.mrt</groupId>
        <artifactId>mrt-audit-it</artifactId>
        <packaging>war</packaging>
        <version>4.0-SNAPSHOT</version>
        <name>UC3-mrtAuditIT</name>
        <url>http://uc3.cdlib.org</url>
  
        <properties>
          <merritt-cloud.version>4.0-SNAPSHOT</merritt-cloud.version>
          <merritt-core.version>4.0-SNAPSHOT</merritt-core.version>
          <!--merritt-bom.version>4.0-SNAPSHOT</merritt-bom.version-->
          <itDockerRegistry>it-docker-registry</itDockerRegistry>
          <propertyDir>test</propertyDir>
          <docker.skip>${env.SKIP_DOCKER_TEST}</docker.skip>
          <skipTests>${env.SKIP_DOCKER_TEST}</skipTests>
        </properties>

        <distributionManagement>
          <repository>
            <id>cdlib-uc3-mrt-uc3-mrt-java</id>
            <name>cdlib-uc3-mrt-uc3-mrt-java</name>
            <url>https://cdlib-uc3-mrt-${env.AWS_ACCOUNT_ID}.d.codeartifact.us-west-2.amazonaws.com/maven/uc3-mrt-java/</url>
          </repository>
        </distributionManagement>

        <dependencyManagement>
          <dependencies>
            <dependency>
              <groupId>org.cdlib.mrt</groupId>
              <artifactId>mrt-reflectoring-bom</artifactId>
              <version>${merritt-bom.version}</version>
              <type>pom</type>
              <scope>import</scope>
            </dependency>
          </dependencies>
        </dependencyManagement>  
          
        <parent>
            <groupId>org.cdlib.mrt</groupId>
            <artifactId>mrt-parent-properties</artifactId>
            <!--This version cannot be set as a property-->
            <version>PAR-4.0-SNAPSHOT</version>
        </parent>

        <repositories>
          <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2/</url>
            <releases>
              <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
              <updatePolicy>never</updatePolicy>
            </snapshots>
          </repository>
        </repositories>

        <profiles>
          <profile>
            <id>aws</id>
            <activation>
              <property>
                <name>env.ECR_REGISTRY</name>
              </property>
            </activation>
            <properties>
              <!-- Override only if necessary -->
              <itDockerRegistry>${env.ECR_REGISTRY}</itDockerRegistry>
            </properties>
          </profile>
        </profiles>
        <build>
          <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-war-plugin</artifactId>
              <version>${maven.war.plugin.version}</version>
            </plugin>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>${jacoco.maven.plugin.version}</version>
              <executions>
                <execution>
                  <id>default-prepare-agent</id>
                  <goals>
                    <goal>prepare-agent</goal>
                  </goals>
                </execution>
                <execution>
                  <id>default-report</id>
                  <phase>verify</phase>
                  <goals>
                    <goal>report</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>

            <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>${docker.maven.plugin.version}</version>
              <executions>
                <execution>
                  <id>prepare-it-server</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                  <configuration>
                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                    <images>
                      <image>
                        <name>${itDockerRegistry}/mrt-minio-it-with-content:dev</name>
                        <alias>minio-server</alias>
                        <run>
                          <network>
                            <name>network</name>
                            <alias>minio-server</alias>
                          </network>
                          <ports>
                             <port>minio-server.port:9000</port>
                          </ports>
                          <wait>
                            <time>2000</time>
                          </wait>
                        </run>
                      </image>
                      <image>
                        <name>${itDockerRegistry}/mrt-it-database-audit-replic:dev</name>
                        <alias>mrt-it-database</alias>
                        <run>
                          <network>
                            <name>network</name>
                            <alias>mrt-it-database</alias>
                          </network>
                          <env>
                            <MYSQL_DATABASE>inv</MYSQL_DATABASE>
                            <MYSQL_USER>user</MYSQL_USER>
                            <MYSQL_PASSWORD>password</MYSQL_PASSWORD>
                            <MYSQL_ROOT_PASSWORD>root-password</MYSQL_ROOT_PASSWORD>
                          </env>
                          <ports>
                            <port>mrt-it-database.port:3306</port>
                          </ports>
                          <wait>
                            <time>20000</time>
                          </wait>
                        </run>
                      </image>
                      <image>
                        <name>${itDockerRegistry}/merritt-tomcat:dev</name>
                        <alias>it-server</alias>
                        <run>
                          <network>
                            <name>network</name>
                            <alias>it-server</alias>
                          </network>
                          <ports>
                            <port>it-server.port:8080</port>
                          </ports>
                          <wait>
                            <time>14000</time>
                          </wait>
                          <volumes>
                            <bind>
                              <volume>${project.basedir}/target/mrt-audit-it-${project.version}.war:/usr/local/tomcat/webapps/mrtaudit.war</volume>
                            </bind>
                          </volumes>
                          <env>
                            <CATALINA_OPTS>-Dfile.encoding=UTF8 -Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true</CATALINA_OPTS>
                          </env>
                          <log>
                            <enabled>true</enabled>
                          </log>
                        </run>
                      </image>
                    </images>
                  </configuration>
                </execution>
                <execution>
                  <id>remove-it-server</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <version>${maven.failsafe.plugin.version}</version>
              <executions>
                <execution>
                  <goals>
                    <goal>integration-test</goal>
                    <goal>verify</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <includes>
                  <include>**/*IT</include>
                </includes>
                <environmentVariables>
                  <it-server.port>${it-server.port}</it-server.port>
                  <mrt-it-database.port>${mrt-it-database.port}</mrt-it-database.port>
                </environmentVariables>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>${maven.surefire.plugin.version}</version>
              <configuration>
                <!-- Includes Test* and *Test by default -->
                <!-- skips surefire tests without skipping failsafe tests.
                           Property value seems to magically default to false -->
                <skipTests>${skip.surefire.tests}</skipTests>
              </configuration>
            </plugin>
          </plugins>
        </build>

        <dependencies>
            
          <dependency>
            <groupId>org.cdlib.mrt</groupId>
            <artifactId>mrt-auditsrcpub</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
          </dependency>

          <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
          </dependency>
          
          <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
          </dependency>
         
          <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
          </dependency>

          <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
          </dependency>
        </dependencies>
      </project>
