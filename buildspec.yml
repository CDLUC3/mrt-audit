version: 0.2

# Pre-requisites
# - Create CodeBuild project
#   - Provide minimal github credentials to access public repo

phases:
  pre_build:
    on-failure: ABORT
    commands:
      - cp settings.xml ~/.m2/
      - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain cdlib-uc3-mrt --domain-owner $AWS_ACCOUNT_ID --region $AWS_REGION --query authorizationToken --output text`
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}
      - BRANCHTAG=`git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
      - echo "Branchtag ${BRANCHTAG}"

  build:
    on-failure: ABORT
    commands:
      # - mvn -ntp clean install -Ddocker.skip -DskipITs -Dmaven.test.skip=true
      - mvn -ntp clean install
      - |
        if [[ "${BRANCHTAG}" == "main" ]]
        then
          SEMVER=''
        elif [[ "${BRANCHTAG}" == "codebuild" ]]
        then
          SEMVER=''
        else
          SEMVER="-Dversion=${BRANCHTAG}"
        fi
      - echo "Semver $SEMVER"
      - mvn -ntp deploy:deploy-file -Durl=${CODEARTIFACT_URL} -DrepositoryId=cdlib-uc3-mrt-uc3-mrt-java -Dfile=$(ls audit-it/target/mrt-audit-it-*.war) -Dversion=${SEMVER}
      - mvn -ntp deploy:deploy-file -Durl=${CODEARTIFACT_URL} -DrepositoryId=cdlib-uc3-mrt-uc3-mrt-java -Dfile=$(ls audit-war/target/mrt-auditwarpub-*.war) -Dversion=${SEMVER}

      - |
        docker build \
          --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
          -t ${ECR_REGISTRY}/mrt-audit:dev .
  post_build:
    commands:
      #- aws s3 rm s3://${S3CFBUCKET}/api --recursive
